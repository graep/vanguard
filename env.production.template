# Production Environment Configuration

This file contains the production environment variables for the Vanguard Fleet Inspection application.

## Required Environment Variables

Set these environment variables in your production deployment environment:

```bash
# Firebase Configuration
FIREBASE_API_KEY=your_firebase_api_key_here
FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
FIREBASE_PROJECT_ID=your_project_id
FIREBASE_STORAGE_BUCKET=your_project.firebasestorage.app
FIREBASE_MESSAGING_SENDER_ID=your_messaging_sender_id
FIREBASE_APP_ID=your_app_id
FIREBASE_MEASUREMENT_ID=your_measurement_id

# Application Configuration
APP_NAME=Vanguard Fleet Inspection
APP_VERSION=1.0.0
APP_ENVIRONMENT=production

# Security Configuration
ENABLE_APP_CHECK=true
APP_CHECK_SITE_KEY=your_recaptcha_site_key

# Logging Configuration
LOG_LEVEL=warn
ENABLE_REMOTE_LOGGING=true
LOG_ENDPOINT=https://your-logging-endpoint.com/api/logs

# Performance Configuration
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_SAMPLE_RATE=0.1

# Feature Flags
ENABLE_ANALYTICS=true
ENABLE_ERROR_REPORTING=true
ENABLE_CRASH_REPORTING=true
```

## Deployment Instructions

### Firebase Hosting
1. Set environment variables in your CI/CD pipeline
2. Run `npm run build:prod` to build with environment variables
3. Deploy with `firebase deploy --only hosting`

### Docker
```dockerfile
ENV FIREBASE_API_KEY=your_key
ENV FIREBASE_AUTH_DOMAIN=your_domain
# ... other variables
```

### Kubernetes
```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vanguard-config
data:
  FIREBASE_API_KEY: "your_key"
  FIREBASE_AUTH_DOMAIN: "your_domain"
  # ... other variables
```

## Security Notes

- Never commit actual environment variables to version control
- Use secure secret management systems in production
- Rotate API keys regularly
- Monitor for exposed credentials
- Use least privilege principle for Firebase service accounts

## Validation

The application will validate all required environment variables on startup and fail gracefully if any are missing.


